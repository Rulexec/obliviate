group 'ruliov.obliviate'
version '0.0.1'

buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

sourceSets {
    main {
        kotlin {
            srcDir 'src/api/kotlin'
            srcDir 'src/main/kotlin'
        }
    }
    test {
        kotlin {
            srcDir 'src/test/kotlin'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.1.5.v20140505'

    runtime group: 'org.postgresql', name: 'postgresql', version: '9.3-1102-jdbc41'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

clean.doFirst {
    delete "${projectDir}/src/main/resources/static"
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into new File(buildDir, 'libs-runtime')
}

def execOrFail(String[] cmds, dir, errorText) {
    Process process = Runtime.getRuntime().exec(cmds, null, dir)

    int result = process.waitFor()

    if (result != 0) throw new GradleScriptException(errorText + ": " + result, null)
}
task buildFrontend << {
    File resourcesDir = new File(projectDir, 'src/main/resources/static')

    resourcesDir.mkdirs()
    if (!resourcesDir.exists()) throw new GradleScriptException("Cannot create resources folder", null)

    copy {
        from new File(projectDir, 'frontend/static')
        into resourcesDir
    }
}

task stage(dependsOn: ['build', 'clean', 'copyDeps', 'buildFrontend'])
build.mustRunAfter(clean, buildFrontend)
buildFrontend.mustRunAfter clean
copyDeps.mustRunAfter build

jar {
    manifest {
        attributes(
            'Main-Class': 'ruliov.obliviate.Main'
        )
    }
}
